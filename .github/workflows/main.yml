name: Terraform Deploy with GitHub Actions

on:
    push:
        branches:
            - deploy   

env:
  PROJECT_DIR: projects/ecs-kinesis-timestream
  PROJECT_NAME: "ecs-kinesis-timestream"
  ENV: "qa"
        

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2
            
        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.4.6
            terraform_wrapper: false
            
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Set up AWS CLI configuration
          run: |
            mkdir -p $HOME/.aws
            echo "[default]" >> $HOME/.aws/credentials
            echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $HOME/.aws/credentials
            echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $HOME/.aws/credentials
            echo "[default]" >> $HOME/.aws/config
            echo "region=${{ secrets.AWS_REGION }}" >> $HOME/.aws/config
    
        - name: Create Backend S3 Bucket for Terraform
          run: |
            aws s3api create-bucket \
            --bucket "tfstate-backend-${{ secrets.AWS_ACCOUNT_ID }}-${{ env.ENV }}" \
            --region ${{ secrets.AWS_REGION }} \

        - name: Terraform Init
          run: |
            cd ${{ env.PROJECT_DIR }}/terraform
            terraform init -backend-config="bucket=tfstate-backend-${{ secrets.AWS_ACCOUNT_ID }}-${{ env.ENV }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" 

        - name: Terraform Apply
          id: terraform-apply
          run: |
            cd ${{ env.PROJECT_DIR }}/terraform
            terraform apply -auto-approve

    
        - name: Build and Push Docker Image for ECR
          run: | 
            cd ${{ env.PROJECT_DIR }}/data-producer
            ECR_URL=$(terraform output -raw ecr_repository_url)
            echo $ECR_URL
            
            cd ../modules/ecr 
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_URL
            docker build -t "$ECR_URL:latest" .
            docker push "$ECR_URL:latest"
